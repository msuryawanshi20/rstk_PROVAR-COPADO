<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="22">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: SFConnection (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">QARSF_Admin</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName">
          <value class="value" valueClass="string">Rootstock_Financials</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.StepGroup" name="StepGroup" testItemId="38" title="Reading Excel Data">
      <arguments>
        <argument id="description">
          <value class="value" valueClass="string">Reading Excel Data</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="hidden" testItemId="32">
          <steps>
            <caseCall testCaseId="0996b2be-bbb6-4b92-82d8-19ad6683a2ac" testCasePath="tests/Purchase Order/Callable/ReadExcelPath.testcase" testItemId="33">
              <arguments>
                <argument id="reuseConnectionName">
                  <value class="value" valueClass="string">SFConnection</value>
                </argument>
              </arguments>
              <outputArguments>
                <outputArgument id="ExcelPath">
                  <name class="value" valueClass="string">ExcelPath</name>
                </outputArgument>
                <outputArgument id="ExcelURL" scope="Folder">
                  <name class="value" valueClass="string">ExcelURL</name>
                </outputArgument>
                <outputArgument id="POUIExcel">
                  <name class="value" valueClass="string">POUIExcel</name>
                </outputArgument>
                <outputArgument id="POLoaderExcel">
                  <name class="value" valueClass="string">POLoaderExcel</name>
                </outputArgument>
                <outputArgument id="POSYDATAExcel">
                  <name class="value" valueClass="string">POSYDATAExcel</name>
                </outputArgument>
                <outputArgument id="POSydataExcel1">
                  <name class="value" valueClass="string">POSydataExcel1</name>
                </outputArgument>
                <outputArgument id="FinExcel">
                  <name class="value" valueClass="string">FinExcel</name>
                </outputArgument>
              </outputArguments>
            </caseCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.StepGroup" name="StepGroup" testItemId="2" title="ReadExcel">
              <arguments>
                <argument id="description">
                  <value class="value" valueClass="string">ReadExcel</value>
                </argument>
              </arguments>
              <parameterValueSources>
                <parameterValueSource variableName="SourceData" variableScope="Test">
                  <cacheToken>C:/Users/dellDevonforce/Provar/RootstockFinancials/PurchaseOrder/templates/RSTKF_AutomationData.xlsx;1616676239765</cacheToken>
                  <cachedParameters>
                    <apiParam name="Vendor"/>
                    <apiParam name="Item"/>
                    <apiParam name="Quantity"/>
                    <apiParam name="UnitPrice"/>
                  </cachedParameters>
                  <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
                    <workbookPath class="variable">
                      <path element="POUIExcel"/>
                    </workbookPath>
                    <worksheetName class="value" valueClass="string">POReceipt</worksheetName>
                    <valuesRange class="value"/>
                  </sourceValue>
                </parameterValueSource>
              </parameterValueSources>
              <clauses>
                <clause name="hidden" testItemId="3">
                  <steps/>
                </clause>
              </clauses>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <caseCall testCaseId="8f010250-9f93-4d50-8117-a6f51aefe852" testCasePath="tests/Purchase Order/Callable/POmultipleline.testcase" testItemId="4">
      <arguments>
        <argument id="reuseConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="IPVendor">
          <value class="variable">
            <path element="SourceData"/>
            <path element="Vendor"/>
          </value>
        </argument>
        <argument id="list">
          <value class="variable">
            <path element="SourceData"/>
          </value>
        </argument>
      </arguments>
      <outputArguments>
        <outputArgument id="PONumber">
          <name class="value" valueClass="string">PONumber</name>
        </outputArgument>
        <outputArgument id="POHDRID">
          <name class="value" valueClass="string">POHDRID</name>
        </outputArgument>
        <outputArgument id="OrderNumber">
          <name class="value" valueClass="string">OrderNumber</name>
        </outputArgument>
        <outputArgument id="CreatedDate">
          <name class="value" valueClass="string">CreatedDate</name>
        </outputArgument>
        <outputArgument id="POTotal">
          <name class="value" valueClass="string">POTotal</name>
        </outputArgument>
      </outputArguments>
    </caseCall>
    <caseCall testCaseId="bc86e6b2-9609-43e2-b616-d3e6d10407d7" testCasePath="tests/Purchase Order/Callable/PurchaseOrderReceipt.testcase" testItemId="5">
      <tags/>
      <arguments>
        <argument id="reuseConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="OrdNo">
          <value class="variable">
            <path element="OrderNumber"/>
          </value>
        </argument>
        <argument id="IPQTY">
          <value class="variable">
            <path element="SourceData"/>
            <path element="Quantity"/>
          </value>
        </argument>
        <argument id="IPList">
          <value class="variable">
            <path element="SourceData"/>
          </value>
        </argument>
      </arguments>
    </caseCall>
    <caseCall testCaseId="29846612-c501-4e3b-863b-1cd4c090c96b" testCasePath="tests/Purchase Order/Callable/POReceiptVerification.testcase" testItemId="6">
      <arguments>
        <argument id="reuseConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="POHDRID">
          <value class="variable">
            <path element="POHDRID"/>
          </value>
        </argument>
        <argument id="ExpectedResult">
          <value class="variable">
            <path element="SourceData"/>
          </value>
        </argument>
      </arguments>
    </caseCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="7" title="SOQL Query: select Id,rstk__pohdr_ordsts__c from rstk__pohdr__c where Id ='{POHDRID}'=&gt;pohdr">
      <arguments>
        <argument id="soqlQuery">
          <value class="compound">
            <parts>
              <value valueClass="string">select Id,rstk__pohdr_ordsts__c from rstk__pohdr__c where Id ='</value>
              <variable>
                <path element="POHDRID"/>
              </variable>
              <value valueClass="string">'</value>
            </parts>
          </value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">pohdr</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="9" title="SOQL Query: select Id,rstk__poline_ordno__c,rstk__formula_qtyrcvd__c, rstk__poline_ordsts__c,rstk__poline_qtyacc__c from rstk__poline__c where rstk__poline_ordno__c ='{POHDRID}'=&gt;poline">
      <arguments>
        <argument id="soqlQuery">
          <value class="compound">
            <parts>
              <value valueClass="string">select Id,rstk__poline_ordno__c,rstk__formula_qtyrcvd__c, rstk__poline_ordsts__c,rstk__poline_qtyacc__c from rstk__poline__c where rstk__poline_ordno__c ='</value>
              <variable>
                <path element="POHDRID"/>
              </variable>
              <value valueClass="string">'</value>
            </parts>
          </value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">poline</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="8" title="Assert: 5-Vendor Notified EqualTo {pohdr.rstk__pohdr_ordsts__c}">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">5-Vendor Notified</value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="pohdr"/>
            <path element="rstk__pohdr_ordsts__c"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage">
          <value class="value" valueClass="string">PO Status is not correct</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="12" title="Set Values: rownum">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">rownum</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">1</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="13" title="For Each: {poline}=&gt;lineiteration">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="poline"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">lineiteration</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="30">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="31" title="Assert: 8-All Line Items Received EqualTo {lineiteration.rstk__poline_ordsts__c}">
              <arguments>
                <argument id="expectedValue">
                  <value class="value" valueClass="string">8-All Line Items Received</value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="lineiteration"/>
                    <path element="rstk__poline_ordsts__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="14" title="Assert: {SourceData[rownum].Quantity} EqualTo {lineiteration.rstk__poline_qtyacc__c}">
              <arguments>
                <argument id="expectedValue">
                  <value class="variable">
                    <path element="SourceData">
                      <filter class="conditionFilter">
                        <condition class="variable">
                          <path element="rownum"/>
                        </condition>
                      </filter>
                    </path>
                    <path element="Quantity"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="lineiteration"/>
                    <path element="rstk__poline_qtyacc__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="37" title="Set Values: rownum">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">rownum</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="add">
                          <lhs class="variable">
                            <path element="rownum"/>
                          </lhs>
                          <rhs class="value" valueClass="decimal">1</rhs>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
